//
// CardStatementSummaryResBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct CardStatementSummaryResBody: Codable, JSONEncodable, Hashable {

    static let cardIdentifierIdRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let cardIdentifierTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    static let statementPeriodRule = StringRule(minLength: 1, maxLength: 4, pattern: nil)
    /** 454545XXXXXX1234 */
    internal var cardIdentifierId: String
    /** CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS */
    internal var cardIdentifierType: String
    /** Statement period for the card statement summary ..Maximum statement is 12 months from the current date */
    internal var statementPeriod: String
    internal var statementDetails: StatementDetails?

    internal init(cardIdentifierId: String, cardIdentifierType: String, statementPeriod: String, statementDetails: StatementDetails? = nil) {
        self.cardIdentifierId = cardIdentifierId
        self.cardIdentifierType = cardIdentifierType
        self.statementPeriod = statementPeriod
        self.statementDetails = statementDetails
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case cardIdentifierId = "card_identifier_id"
        case cardIdentifierType = "card_identifier_type"
        case statementPeriod = "statement_period"
        case statementDetails = "statement_details"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cardIdentifierId, forKey: .cardIdentifierId)
        try container.encode(cardIdentifierType, forKey: .cardIdentifierType)
        try container.encode(statementPeriod, forKey: .statementPeriod)
        try container.encodeIfPresent(statementDetails, forKey: .statementDetails)
    }
}

