//
// PINViewRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct PINViewRequest: Codable, JSONEncodable, Hashable {

    /** Card Identifier Type:  * `EXID` - External Id  * `CONTRACT_NUMBER` - Clear PAN  */
    internal var cardIdentifierType: CardIdentifierType
    /** Identifier related to the Identifier Type  */
    internal var cardIdentifierId: String
    /** Mandatory - Public Key which will be used to encrypt the returned identifier. This public key must be directly linked to the private key you will use to decrypt the PIN in your application. Supported Encryption:   RSA(4096)  */
    internal var publicKey: String

    internal init(cardIdentifierType: CardIdentifierType, cardIdentifierId: String, publicKey: String) {
        self.cardIdentifierType = cardIdentifierType
        self.cardIdentifierId = cardIdentifierId
        self.publicKey = publicKey
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case cardIdentifierType = "card_identifier_type"
        case cardIdentifierId = "card_identifier_id"
        case publicKey
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cardIdentifierType, forKey: .cardIdentifierType)
        try container.encode(cardIdentifierId, forKey: .cardIdentifierId)
        try container.encode(publicKey, forKey: .publicKey)
    }
}

