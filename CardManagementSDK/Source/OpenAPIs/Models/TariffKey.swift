//
// TariffKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct TariffKey: Codable, JSONEncodable, Hashable {

    static let CP_REPLRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let CP_REPL_NOFEERule = StringRule(minLength: 1, maxLength: 3, pattern: nil)
    /** Type of the balance */
    internal var CP_REPL: String?
    /** Limit currency */
    internal var CP_REPL_NOFEE: String?

    internal init(CP_REPL: String? = nil, CP_REPL_NOFEE: String? = nil) {
        self.CP_REPL = CP_REPL
        self.CP_REPL_NOFEE = CP_REPL_NOFEE
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case CP_REPL
        case CP_REPL_NOFEE
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(CP_REPL, forKey: .CP_REPL)
        try container.encodeIfPresent(CP_REPL_NOFEE, forKey: .CP_REPL_NOFEE)
    }
}

