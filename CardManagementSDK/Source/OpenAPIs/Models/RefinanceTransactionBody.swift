//
// RefinanceTransactionBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct RefinanceTransactionBody: Codable, JSONEncodable, Hashable {

    static let cardIdentifierIdRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let cardIdentifierTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    /** 454545XXXXXX1234 */
    internal var cardIdentifierId: String
    /** CONTRACT_NUMBER  is used for clear card number or EXID which is a unique identifier for the card generated by CMS */
    internal var cardIdentifierType: String
    internal var transId: String
    internal var planNumber: String
    internal var instalmentDescription: String?
    internal var channel: String?
    internal var overrideOptions: OverrideOptions?

    internal init(cardIdentifierId: String, cardIdentifierType: String, transId: String, planNumber: String, instalmentDescription: String? = nil, channel: String? = nil, overrideOptions: OverrideOptions? = nil) {
        self.cardIdentifierId = cardIdentifierId
        self.cardIdentifierType = cardIdentifierType
        self.transId = transId
        self.planNumber = planNumber
        self.instalmentDescription = instalmentDescription
        self.channel = channel
        self.overrideOptions = overrideOptions
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case cardIdentifierId = "card_identifier_id"
        case cardIdentifierType = "card_identifier_type"
        case transId = "trans_id"
        case planNumber = "plan_number"
        case instalmentDescription = "instalment_description"
        case channel
        case overrideOptions = "override_options"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cardIdentifierId, forKey: .cardIdentifierId)
        try container.encode(cardIdentifierType, forKey: .cardIdentifierType)
        try container.encode(transId, forKey: .transId)
        try container.encode(planNumber, forKey: .planNumber)
        try container.encodeIfPresent(instalmentDescription, forKey: .instalmentDescription)
        try container.encodeIfPresent(channel, forKey: .channel)
        try container.encodeIfPresent(overrideOptions, forKey: .overrideOptions)
    }
}

