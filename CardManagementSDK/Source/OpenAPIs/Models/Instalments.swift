//
// Instalments.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct Instalments: Codable, JSONEncodable, Hashable {

    internal var instalmentId: String
    internal var planNumber: String
    internal var creationDate: String
    internal var firstPaymentDate: String
    internal var closeDate: String
    internal var currency: String
    internal var totalAmount: String
    internal var principal: String
    internal var fee: String
    internal var paidAmount: String
    internal var dueAmount: String
    internal var overdueAmount: String
    internal var writtenOffAmount: String
    internal var portionTotal: String
    internal var portionPrincipal: String
    internal var portionFee: String

    internal init(instalmentId: String, planNumber: String, creationDate: String, firstPaymentDate: String, closeDate: String, currency: String, totalAmount: String, principal: String, fee: String, paidAmount: String, dueAmount: String, overdueAmount: String, writtenOffAmount: String, portionTotal: String, portionPrincipal: String, portionFee: String) {
        self.instalmentId = instalmentId
        self.planNumber = planNumber
        self.creationDate = creationDate
        self.firstPaymentDate = firstPaymentDate
        self.closeDate = closeDate
        self.currency = currency
        self.totalAmount = totalAmount
        self.principal = principal
        self.fee = fee
        self.paidAmount = paidAmount
        self.dueAmount = dueAmount
        self.overdueAmount = overdueAmount
        self.writtenOffAmount = writtenOffAmount
        self.portionTotal = portionTotal
        self.portionPrincipal = portionPrincipal
        self.portionFee = portionFee
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case instalmentId = "instalment_id"
        case planNumber = "plan_number"
        case creationDate = "creation_date"
        case firstPaymentDate = "first_payment_date"
        case closeDate = "close_date"
        case currency
        case totalAmount = "total_amount"
        case principal
        case fee
        case paidAmount = "paid_amount"
        case dueAmount = "due_amount"
        case overdueAmount = "overdue_amount"
        case writtenOffAmount = "written_off_amount"
        case portionTotal = "portion_total"
        case portionPrincipal = "portion_principal"
        case portionFee = "portion_fee"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(instalmentId, forKey: .instalmentId)
        try container.encode(planNumber, forKey: .planNumber)
        try container.encode(creationDate, forKey: .creationDate)
        try container.encode(firstPaymentDate, forKey: .firstPaymentDate)
        try container.encode(closeDate, forKey: .closeDate)
        try container.encode(currency, forKey: .currency)
        try container.encode(totalAmount, forKey: .totalAmount)
        try container.encode(principal, forKey: .principal)
        try container.encode(fee, forKey: .fee)
        try container.encode(paidAmount, forKey: .paidAmount)
        try container.encode(dueAmount, forKey: .dueAmount)
        try container.encode(overdueAmount, forKey: .overdueAmount)
        try container.encode(writtenOffAmount, forKey: .writtenOffAmount)
        try container.encode(portionTotal, forKey: .portionTotal)
        try container.encode(portionPrincipal, forKey: .portionPrincipal)
        try container.encode(portionFee, forKey: .portionFee)
    }
}

