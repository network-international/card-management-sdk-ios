//
// LinkedAccounts.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct LinkedAccounts: Codable, JSONEncodable, Hashable {

    static let accountNumberRule = StringRule(minLength: 1, maxLength: 64, pattern: nil)
    static let accountTypeRule = StringRule(minLength: 1, maxLength: 15, pattern: nil)
    static let accountRoleRule = StringRule(minLength: 1, maxLength: 15, pattern: nil)
    /** Account number */
    internal var accountNumber: String?
    /** Current/Saving */
    internal var accountType: String?
    /** Primary/Supplimentary */
    internal var accountRole: String?

    internal init(accountNumber: String? = nil, accountType: String? = nil, accountRole: String? = nil) {
        self.accountNumber = accountNumber
        self.accountType = accountType
        self.accountRole = accountRole
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case accountNumber = "account_number"
        case accountType = "account_type"
        case accountRole = "account_role"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accountNumber, forKey: .accountNumber)
        try container.encodeIfPresent(accountType, forKey: .accountType)
        try container.encodeIfPresent(accountRole, forKey: .accountRole)
    }
}

