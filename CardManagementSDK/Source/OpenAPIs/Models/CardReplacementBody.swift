//
// CardReplacementBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct CardReplacementBody: Codable, JSONEncodable, Hashable {

    static let cardIdentifierIdRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let cardIdentifierTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    static let cardExpiryDateRule = StringRule(minLength: 1, maxLength: 4, pattern: nil)
    static let actionTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    static let newCardIdentifierIdRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let newCardIdentifierTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    /** Clear card number generated by FI system. */
    internal var cardIdentifierId: String
    /** CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS */
    internal var cardIdentifierType: String
    /** Card's expiry date format is YYMM */
    internal var cardExpiryDate: String?
    /** Action of the API ex - Renewal, Replacement, Reissue (for Credit and Debit Cards) */
    internal var actionType: String
    /** Clear Card number. If it was not provided, CMS will generate it */
    internal var newCardIdentifierId: String?
    /** CONTRACT_NUMBER is used for clear card number */
    internal var newCardIdentifierType: String?
    internal var customFields: [CustomFieldsCardReplacement]

    internal init(cardIdentifierId: String, cardIdentifierType: String, cardExpiryDate: String? = nil, actionType: String, newCardIdentifierId: String? = nil, newCardIdentifierType: String? = nil, customFields: [CustomFieldsCardReplacement]) {
        self.cardIdentifierId = cardIdentifierId
        self.cardIdentifierType = cardIdentifierType
        self.cardExpiryDate = cardExpiryDate
        self.actionType = actionType
        self.newCardIdentifierId = newCardIdentifierId
        self.newCardIdentifierType = newCardIdentifierType
        self.customFields = customFields
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case cardIdentifierId = "card_identifier_id"
        case cardIdentifierType = "card_identifier_type"
        case cardExpiryDate = "card_expiry_date"
        case actionType = "action_type"
        case newCardIdentifierId = "new_card_identifier_id"
        case newCardIdentifierType = "new_card_identifier_type"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cardIdentifierId, forKey: .cardIdentifierId)
        try container.encode(cardIdentifierType, forKey: .cardIdentifierType)
        try container.encodeIfPresent(cardExpiryDate, forKey: .cardExpiryDate)
        try container.encode(actionType, forKey: .actionType)
        try container.encodeIfPresent(newCardIdentifierId, forKey: .newCardIdentifierId)
        try container.encodeIfPresent(newCardIdentifierType, forKey: .newCardIdentifierType)
        try container.encode(customFields, forKey: .customFields)
    }
}

