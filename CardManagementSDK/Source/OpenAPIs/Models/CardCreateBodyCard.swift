//
// CardCreateBodyCard.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct CardCreateBodyCard: Codable, JSONEncodable, Hashable {

    static let customerIdRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    static let accountNumberRule = StringRule(minLength: 1, maxLength: 64, pattern: nil)
    static let institutionIdRule = StringRule(minLength: 1, maxLength: 5, pattern: nil)
    static let cardIdentifierTypeRule = StringRule(minLength: 1, maxLength: 20, pattern: nil)
    static let cardIdentifierIdRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let cardExpiryDateRule = StringRule(minLength: 1, maxLength: 4, pattern: nil)
    static let cardholderNameRule = StringRule(minLength: 1, maxLength: 21, pattern: nil)
    static let productCodeRule = StringRule(minLength: 1, maxLength: 32, pattern: nil)
    static let cardDateOpenRule = StringRule(minLength: 1, maxLength: 10, pattern: nil)
    static let currencyRule = StringRule(minLength: 1, maxLength: 3, pattern: nil)
    static let cardVirtualIndicatorRule = StringRule(minLength: 1, maxLength: 1, pattern: nil)
    /** Customer ID: Customer Identification number    This should be a unique number */
    internal var customerId: String
    /** Account number */
    internal var accountNumber: String
    /** institution id is the code that is created for each bank or FI(it is the same value as bank code), 982 value is just used as an example in Sandbox */
    internal var institutionId: String
    /** CONTRACT_NUMBER is used for clear card number or EXID which is a unique identifier for the card generated by CMS */
    internal var cardIdentifierType: String?
    /** Clear card number generated by FI system. If it was not provided, CMS will generate it */
    internal var cardIdentifierId: String?
    /** Format YYMM. If it was not provided, CMS will generate it */
    internal var cardExpiryDate: String?
    /** Cardholder name */
    internal var cardholderName: String
    /** Product code, this code is generated by CMS after creating the product, this code is FI spesific code 982_AED_002_P is just used as an example in Sandbox\" */
    internal var productCode: String
    /** Date of card contract creation */
    internal var cardDateOpen: String?
    /** Informative value to the request, does not have any functional impact, the currency will be taken from the product */
    internal var currency: String
    /** V - Virtual P - Physical */
    internal var cardVirtualIndicator: String
    internal var limit: CardCreateBodyCardLimit?
    internal var customFields: [CustomFieldsCardCreate]?

    internal init(customerId: String, accountNumber: String, institutionId: String, cardIdentifierType: String? = nil, cardIdentifierId: String? = nil, cardExpiryDate: String? = nil, cardholderName: String, productCode: String, cardDateOpen: String? = nil, currency: String, cardVirtualIndicator: String, limit: CardCreateBodyCardLimit? = nil, customFields: [CustomFieldsCardCreate]? = nil) {
        self.customerId = customerId
        self.accountNumber = accountNumber
        self.institutionId = institutionId
        self.cardIdentifierType = cardIdentifierType
        self.cardIdentifierId = cardIdentifierId
        self.cardExpiryDate = cardExpiryDate
        self.cardholderName = cardholderName
        self.productCode = productCode
        self.cardDateOpen = cardDateOpen
        self.currency = currency
        self.cardVirtualIndicator = cardVirtualIndicator
        self.limit = limit
        self.customFields = customFields
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case customerId = "customer_id"
        case accountNumber = "account_number"
        case institutionId = "institution_id"
        case cardIdentifierType = "card_identifier_type"
        case cardIdentifierId = "card_identifier_id"
        case cardExpiryDate = "card_expiry_date"
        case cardholderName = "cardholder_name"
        case productCode = "product_code"
        case cardDateOpen = "card_date_open"
        case currency
        case cardVirtualIndicator = "card_virtual_indicator"
        case limit
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(customerId, forKey: .customerId)
        try container.encode(accountNumber, forKey: .accountNumber)
        try container.encode(institutionId, forKey: .institutionId)
        try container.encodeIfPresent(cardIdentifierType, forKey: .cardIdentifierType)
        try container.encodeIfPresent(cardIdentifierId, forKey: .cardIdentifierId)
        try container.encodeIfPresent(cardExpiryDate, forKey: .cardExpiryDate)
        try container.encode(cardholderName, forKey: .cardholderName)
        try container.encode(productCode, forKey: .productCode)
        try container.encodeIfPresent(cardDateOpen, forKey: .cardDateOpen)
        try container.encode(currency, forKey: .currency)
        try container.encode(cardVirtualIndicator, forKey: .cardVirtualIndicator)
        try container.encodeIfPresent(limit, forKey: .limit)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}

